# Default values for kodiak.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: cdignam/kodiak
  pullPolicy: IfNotPresent
  tag: v0.50.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# github webhook secret
secretKey: ""
githubAppID: ""
githubAppName: ""
# githubPrivateKey: |-
#   -----BEGIN RSA PRIVATE KEY-----
#   .....
#   -----END RSA PRIVATE KEY-----
# githubV3ApiRoot: "http(s)://[hostname]/api/v3"
# githubV4ApiUrl: "http(s)://[hostname]/api/graphql"
## Sentry DSN to report any errors Kodiak encounters
# sentryDSN:

## If using external redis instance, set redis.enabled to false and write define
## the redis URL below
redisUrl:

redisPoolSize: 20
loggingLevel: INFO

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

# Enable pod security policy
# https://kubernetes.io/docs/concepts/policy/pod-security-policy/
podSecurityPolicy:
  create: false

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx
  # Values can be templated
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  path: /

  # pathType is only for k8s >= 1.1=
  pathType: Prefix

  hosts:
    - chart-example.local
  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation
  ## Or for k8s > 1.19
  # - path: /*
  #   pathType: Prefix
  #   backend:
  #     service:
  #       name: ssl-redirect
  #       port:
  #         name: use-annotation


  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## Configuration values for the Redis dependency.
## ref: https://github.com/bitnami/charts/tree/master/bitnami/redis
redis:
  ##
  ## Use the Bitnami Redis chart dependency. Note: Redis >= 5 is required
  ## Set to false if bringing your own redis.
  enabled: true

  image:
    tag: 5.0-debian-10

  auth:
    ## Redis password (both master and slave)
    password: aSecretPassword

  rbac:
    ## Specifies whether RBAC resources should be created
    ##
    create: true
